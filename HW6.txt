Michael Quinn

1. Page 167 exercise 3.1:
Indicate the binding time (when the language is designed, when the program is linked, when the program begins execution, etc.) for each of the following decisions in your favorite programming language and implementation. Explain any answers you think are open to interpretation.

Let's go with C++ for this.

a) The number of built-in functions (math, type queries, etc.)
Design Time; because they are built-in and not library functions, they are known immediately.

b) The variable declaration that corresponds to a particular variable reference (use)
Run Time; while they can be known before linking time, the binding itself does not occur until Run Time.

c) The maximum length allowed for a constant (literal) character string
Design Time; this value is known immediately as it is a literal, and not stored as a variable per-say.

d) The referencing environment for a subroutine that is passed as a parameter
Run Time; again, it may be inferred earlier, but it is not actually bound until it is run.

e) The address of a particular library routine
Link Time; if it's in a library it has to be linked first, but it is known before the program begins running.

f) The total amount of space occupied by program code and data
Link Time; technically it happens after everything is linked, but it still is reserved before execution begins.


2 and 3: Unfortunately, no instructions are given on how to run powR.c, and it will not run because it has no entry point.

4. Many storage-management algorithms maintain a list of free blocks.  Here are two different algorithms, first fit and best fit, used to search this list and return a block of the appropriate size.  Which strategy, if either, will result in lower external fragmentation?  What does external fragmentation depend on?
First Fit will use the first free block that is large enough to store the block, while Best Fit searches for the smallest block that is large enough. Best Fit is very good at preventing Internal Fragmentation, but can lead to more External Fragmentation in some cases. External Fragmentation is best described by the number of blocks that the free space is divided into; because First Fit tends to cluster more blocks towards the beginning, and is more likely to make use of the Free Blocks between used blocks, it often results in lower external fragmentation. 
That said, the external fragmentation really depends on the size distribution of the blocks; if there are many larger blocks, Best Fit will likely result in lower External Fragmentation, while First Fit may be better when there are many smaller blocks.

5. 
